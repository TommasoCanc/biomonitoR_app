c("12-30", "12-31", "01-01", "01-02"), c("01-05", "01-06",
"01-07"))
for (i in 1:length(sels)) {
sel <- dm %in% sels[[i]]
d2 <- d[sel]
rr2 <- rr[sel]
rr2[rr2 < 1] <- 1
polygon(d2, rr2, border = NULL, col = "forestgreen")
Sys.sleep(t)
}
sel0 <- dm %in% c("12-24", "12-25", "12-26", "12-31", "01-01",
"01-06")
d0 <- d[sel0]
rr0 <- rr[sel0]
for (i in 1:length(sel0)) {
points(d0[i], rr0[i], pch = 19, col = "red", cex = 3)
Sys.sleep(0.4 * t)
}
for (i in 1:2) {
fac <- runif(n = length(d0), min = 0.1, max = 0.9)
points(d0, fac * (rr0 - 1) + 1, pch = 8, cex = 1.2 +
(i - 1) * 0.6, col = "white")
}
Sys.sleep(2 * t)
y <- 1.17
messaux <- paste0("Merry Xmas Super STE!!")
text(x = as.Date(paste(year - 1, "12-28", sep = "-")), y = y,
labels = messaux, vfont = myvfont, cex = 2.5, col = "red")
}
xmasregression(year = 2021, time = 5)
xmasregression <- function (year = 2021, time = 12, seed = NULL)
{
if (!inherits(year, c("numeric", "integer")) || length(year) !=
1L)
stop("'year' must be a number")
if (!inherits(time, c("numeric", "integer")) || length(time) !=
1L || time <= 0)
stop("'time' must be a positive number")
if (!is.null(seed) & (is.na(seed) || !is(seed, "numeric")))
stop("'seed' must be numeric or NULL")
if (!is.null(seed))
set.seed(seed)
t <- time/26
if (!is.null(seed))
set.seed(seed)
dm1 <- paste(12, 20:31, sep = "-")
dm2 <- paste("01", paste0(0, 1:8), sep = "-")
dm <- c(dm1, dm2)
nd <- length(dm)
rr <- runif(n = nd, min = 0.999, 1.001)
rr[dm == "12-24"] <- rr[dm == "12-24"] + 0.03
rr[dm == "12-25"] <- rr[dm == "12-25"] + 0.07
rr[dm == "12-26"] <- rr[dm == "12-26"] + 0.05
rr[dm == "12-31"] <- rr[dm == "12-31"] + 0.1
rr[dm == "01-01"] <- rr[dm == "01-01"] + 0.12
rr[dm == "01-06"] <- rr[dm == "01-06"] + 0.07
d <- as.Date(c(paste(year - 1, dm1, sep = "-"), paste(year,
dm2, sep = "-")))
#newwindow()
dev.new()
op <- par(las = 1, cex.main = 1.5, col.main = "blue")
on.exit(par(op))
op
xl <- paste("Date")
yl <- paste("Drunk risk")
plot(d, rr, xlab = xl, ylab = yl, type = "n", ylim = c(1, 1.2), xaxt = "n")
axis(1, at = d, labels = FALSE)
text(d, par("usr")[3] - 0.01, labels = format(d, "%d/%m/%y"),
srt = 45, adj = 1, xpd = TRUE, cex = 0.7)
Sys.sleep(0.5 * t)
for (i in 1:length(d)) {
Sys.sleep(0.4 * t)
points(d[i], rr[i], col = "gray", pch = 19)
}
Sys.sleep(1.5 * t)
myvfont <- c("serif", "bold")
text(mean(d), 1.22, labels = "Xmas  model",
col = "blue", xpd = TRUE, cex = 1.4, vfont = myvfont)
Sys.sleep(1.5 * t)
sels <- list(c("12-23", "12-24", "12-25", "12-26", "12-27"),
c("12-30", "12-31", "01-01", "01-02"), c("01-05", "01-06",
"01-07"))
for (i in 1:length(sels)) {
sel <- dm %in% sels[[i]]
d2 <- d[sel]
rr2 <- rr[sel]
rr2[rr2 < 1] <- 1
polygon(d2, rr2, border = NULL, col = "forestgreen")
Sys.sleep(t)
}
sel0 <- dm %in% c("12-24", "12-25", "12-26", "12-31", "01-01",
"01-06")
d0 <- d[sel0]
rr0 <- rr[sel0]
for (i in 1:length(sel0)) {
points(d0[i], rr0[i], pch = 19, col = "red", cex = 3)
Sys.sleep(0.4 * t)
}
for (i in 1:2) {
fac <- runif(n = length(d0), min = 0.1, max = 0.9)
points(d0, fac * (rr0 - 1) + 1, pch = 8, cex = 1.2 +
(i - 1) * 0.6, col = "white")
}
Sys.sleep(2 * t)
y <- 1.17
messaux <- paste("Merry Xmas Super STE!!")
text(x = as.Date(paste(year, "12-28", sep = "-")), y = y,
labels = messaux, vfont = myvfont, cex = 2.5, col = "red")
}
xmasregression(year = 2021, time = 5)
xmasregression <- function (year = 2021, time = 12, seed = NULL)
{
if (!inherits(year, c("numeric", "integer")) || length(year) !=
1L)
stop("'year' must be a number")
if (!inherits(time, c("numeric", "integer")) || length(time) !=
1L || time <= 0)
stop("'time' must be a positive number")
if (!is.null(seed) & (is.na(seed) || !is(seed, "numeric")))
stop("'seed' must be numeric or NULL")
if (!is.null(seed))
set.seed(seed)
t <- time/26
if (!is.null(seed))
set.seed(seed)
dm1 <- paste(12, 20:31, sep = "-")
dm2 <- paste("01", paste0(0, 1:8), sep = "-")
dm <- c(dm1, dm2)
nd <- length(dm)
rr <- runif(n = nd, min = 0.999, 1.001)
rr[dm == "12-24"] <- rr[dm == "12-24"] + 0.03
rr[dm == "12-25"] <- rr[dm == "12-25"] + 0.07
rr[dm == "12-26"] <- rr[dm == "12-26"] + 0.05
rr[dm == "12-31"] <- rr[dm == "12-31"] + 0.1
rr[dm == "01-01"] <- rr[dm == "01-01"] + 0.12
rr[dm == "01-06"] <- rr[dm == "01-06"] + 0.07
d <- as.Date(c(paste(year - 1, dm1, sep = "-"), paste(year,
dm2, sep = "-")))
#newwindow()
dev.new()
op <- par(las = 1, cex.main = 1.5, col.main = "blue")
on.exit(par(op))
op
xl <- paste("Date")
yl <- paste("Drunk risk")
plot(d, rr, xlab = xl, ylab = yl, type = "n", ylim = c(1, 1.2), xaxt = "n")
axis(1, at = d, labels = FALSE)
text(d, par("usr")[3] - 0.01, labels = format(d, "%d/%m/%y"),
srt = 45, adj = 1, xpd = TRUE, cex = 0.7)
Sys.sleep(0.5 * t)
for (i in 1:length(d)) {
Sys.sleep(0.4 * t)
points(d[i], rr[i], col = "gray", pch = 19)
}
Sys.sleep(1.5 * t)
myvfont <- c("serif", "bold")
text(mean(d), 1.22, labels = "Xmas  model",
col = "blue", xpd = TRUE, cex = 1.4, vfont = myvfont)
Sys.sleep(1.5 * t)
sels <- list(c("12-23", "12-24", "12-25", "12-26", "12-27"),
c("12-30", "12-31", "01-01", "01-02"), c("01-05", "01-06",
"01-07"))
for (i in 1:length(sels)) {
sel <- dm %in% sels[[i]]
d2 <- d[sel]
rr2 <- rr[sel]
rr2[rr2 < 1] <- 1
polygon(d2, rr2, border = NULL, col = "forestgreen")
Sys.sleep(t)
}
sel0 <- dm %in% c("12-24", "12-25", "12-26", "12-31", "01-01",
"01-06")
d0 <- d[sel0]
rr0 <- rr[sel0]
for (i in 1:length(sel0)) {
points(d0[i], rr0[i], pch = 19, col = "red", cex = 3)
Sys.sleep(0.4 * t)
}
for (i in 1:2) {
fac <- runif(n = length(d0), min = 0.1, max = 0.9)
points(d0, fac * (rr0 - 1) + 1, pch = 8, cex = 1.2 +
(i - 1) * 0.6, col = "white")
}
Sys.sleep(2 * t)
y <- 1.17
messaux <- paste("Merry Xmas Super STE!!")
text(x = as.Date(paste(year-.01, "12-28", sep = "-")), y = y,
labels = messaux, vfont = myvfont, cex = 2.5, col = "red")
}
xmasregression(year = 2021, time = 5)
xmasregression <- function (year = 2022, time = 12, seed = NULL)
{
if (!inherits(year, c("numeric", "integer")) || length(year) !=
1L)
stop("'year' must be a number")
if (!inherits(time, c("numeric", "integer")) || length(time) !=
1L || time <= 0)
stop("'time' must be a positive number")
if (!is.null(seed) & (is.na(seed) || !is(seed, "numeric")))
stop("'seed' must be numeric or NULL")
if (!is.null(seed))
set.seed(seed)
t <- time/26
if (!is.null(seed))
set.seed(seed)
dm1 <- paste(12, 20:31, sep = "-")
dm2 <- paste("01", paste0(0, 1:8), sep = "-")
dm <- c(dm1, dm2)
nd <- length(dm)
rr <- runif(n = nd, min = 0.999, 1.001)
rr[dm == "12-24"] <- rr[dm == "12-24"] + 0.03
rr[dm == "12-25"] <- rr[dm == "12-25"] + 0.07
rr[dm == "12-26"] <- rr[dm == "12-26"] + 0.05
rr[dm == "12-31"] <- rr[dm == "12-31"] + 0.1
rr[dm == "01-01"] <- rr[dm == "01-01"] + 0.12
rr[dm == "01-06"] <- rr[dm == "01-06"] + 0.07
d <- as.Date(c(paste(year - 1, dm1, sep = "-"), paste(year,
dm2, sep = "-")))
#newwindow()
dev.new()
op <- par(las = 1, cex.main = 1.5, col.main = "blue")
on.exit(par(op))
op
xl <- paste("Date")
yl <- paste("Drunk risk")
plot(d, rr, xlab = xl, ylab = yl, type = "n", ylim = c(1, 1.2), xaxt = "n")
axis(1, at = d, labels = FALSE)
text(d, par("usr")[3] - 0.01, labels = format(d, "%d/%m/%y"),
srt = 45, adj = 1, xpd = TRUE, cex = 0.7)
Sys.sleep(0.5 * t)
for (i in 1:length(d)) {
Sys.sleep(0.4 * t)
points(d[i], rr[i], col = "gray", pch = 19)
}
Sys.sleep(1.5 * t)
myvfont <- c("serif", "bold")
text(mean(d), 1.22, labels = "Xmas  model",
col = "blue", xpd = TRUE, cex = 1.4, vfont = myvfont)
Sys.sleep(1.5 * t)
sels <- list(c("12-23", "12-24", "12-25", "12-26", "12-27"),
c("12-30", "12-31", "01-01", "01-02"), c("01-05", "01-06",
"01-07"))
for (i in 1:length(sels)) {
sel <- dm %in% sels[[i]]
d2 <- d[sel]
rr2 <- rr[sel]
rr2[rr2 < 1] <- 1
polygon(d2, rr2, border = NULL, col = "forestgreen")
Sys.sleep(t)
}
sel0 <- dm %in% c("12-24", "12-25", "12-26", "12-31", "01-01",
"01-06")
d0 <- d[sel0]
rr0 <- rr[sel0]
for (i in 1:length(sel0)) {
points(d0[i], rr0[i], pch = 19, col = "red", cex = 3)
Sys.sleep(0.4 * t)
}
for (i in 1:2) {
fac <- runif(n = length(d0), min = 0.1, max = 0.9)
points(d0, fac * (rr0 - 1) + 1, pch = 8, cex = 1.2 +
(i - 1) * 0.6, col = "white")
}
Sys.sleep(2 * t)
y <- 1.17
messaux <- paste("Merry Xmas Super STE!!")
text(x = as.Date(paste(year - 1, "12-28", sep = "-")), y = y,
labels = messaux, vfont = myvfont, cex = 2.5, col = "red")
}
xmasregression(time = 5)
xmassnowkoch(year = 2013, seed = NULL)
xmassnowkoch
xmassnowkoch(year = 2013, seed = NULL)
xmassnowkoch <- function (seed = NULL)
{  if (!is.null(seed) & (is.na(seed) || !is(seed, "numeric")))
stop("'seed' must be numeric or NULL")
if (!is.null(seed))
set.seed(seed)
mcex <- 1.8
nsnowflakes <- 40
colors <- rainbow(n = 100, start = 0.5, end = 0.65)
message <- c("Merry", "Xmas", "ALE!")
messagecol <- sample(c("red", "forestgreen", "white"), size = 3,
replace = FALSE)
#newwindow()
dev.new()
plot(c(-10, 10), c(-10, 10), type = "n", asp = 1, axes = F,
xlab = "", ylab = "")
centers <- koch(niter = 1, size = 9, rotate = runif(1, 0,
pi/3))
for (i in 1:nsnowflakes) polygon(randomkoch(), border = NA,
col = colors[sample(1:100)])
for (i in 1:3) {
Sys.sleep(1)
polygon(koch(size = 8, centerX = centers[i, 1], centerY = centers[i,
2], rotate = runif(1, 0, pi/3)), border = "blue",
col = colors[sample(1:20)], lwd = 2)
}
for (i in 1:3) {
Sys.sleep(1)
text(centers[i, 1], centers[i, 2] + 0.6, message[i],
col = messagecol[i], cex = mcex, family = "serif")
text(centers[i, 1], centers[i, 2] - 0.6, col = messagecol[i], cex = mcex,
family = "serif")
}
}
xmassnowkoch(seed = NULL)
koch
koch()
library("christmas")
xmassnowkoch <- function (seed = NULL)
{  if (!is.null(seed) & (is.na(seed) || !is(seed, "numeric")))
stop("'seed' must be numeric or NULL")
if (!is.null(seed))
set.seed(seed)
mcex <- 1.8
nsnowflakes <- 40
colors <- rainbow(n = 100, start = 0.5, end = 0.65)
message <- c("Merry", "Xmas", "ALE!")
messagecol <- sample(c("red", "forestgreen", "white"), size = 3,
replace = FALSE)
#newwindow()
dev.new()
plot(c(-10, 10), c(-10, 10), type = "n", asp = 1, axes = F,
xlab = "", ylab = "")
centers <- koch(niter = 1, size = 9, rotate = runif(1, 0,
pi/3))
for (i in 1:nsnowflakes) polygon(randomkoch(), border = NA,
col = colors[sample(1:100)])
for (i in 1:3) {
Sys.sleep(1)
polygon(koch(size = 8, centerX = centers[i, 1], centerY = centers[i,
2], rotate = runif(1, 0, pi/3)), border = "blue",
col = colors[sample(1:20)], lwd = 2)
}
for (i in 1:3) {
Sys.sleep(1)
text(centers[i, 1], centers[i, 2] + 0.6, message[i],
col = messagecol[i], cex = mcex, family = "serif")
text(centers[i, 1], centers[i, 2] - 0.6, col = messagecol[i], cex = mcex,
family = "serif")
}
}
xmassnowkoch(seed = NULL)
library("animation")
library("grDevices")
library("graphics")
library("stats")
library("methods")
xmasregression <- function (year = 2022, time = 12, seed = NULL)
{
if (!inherits(year, c("numeric", "integer")) || length(year) !=
1L)
stop("'year' must be a number")
if (!inherits(time, c("numeric", "integer")) || length(time) !=
1L || time <= 0)
stop("'time' must be a positive number")
if (!is.null(seed) & (is.na(seed) || !is(seed, "numeric")))
stop("'seed' must be numeric or NULL")
if (!is.null(seed))
set.seed(seed)
t <- time/26
if (!is.null(seed))
set.seed(seed)
dm1 <- paste(12, 20:31, sep = "-")
dm2 <- paste("01", paste0(0, 1:8), sep = "-")
dm <- c(dm1, dm2)
nd <- length(dm)
rr <- runif(n = nd, min = 0.999, 1.001)
rr[dm == "12-24"] <- rr[dm == "12-24"] + 0.03
rr[dm == "12-25"] <- rr[dm == "12-25"] + 0.07
rr[dm == "12-26"] <- rr[dm == "12-26"] + 0.05
rr[dm == "12-31"] <- rr[dm == "12-31"] + 0.1
rr[dm == "01-01"] <- rr[dm == "01-01"] + 0.12
rr[dm == "01-06"] <- rr[dm == "01-06"] + 0.07
d <- as.Date(c(paste(year - 1, dm1, sep = "-"), paste(year,
dm2, sep = "-")))
#newwindow()
dev.new()
op <- par(las = 1, cex.main = 1.5, col.main = "blue")
on.exit(par(op))
op
xl <- paste("Date")
yl <- paste("Drunk risk")
plot(d, rr, xlab = xl, ylab = yl, type = "n", ylim = c(1, 1.2), xaxt = "n")
axis(1, at = d, labels = FALSE)
text(d, par("usr")[3] - 0.01, labels = format(d, "%d/%m/%y"),
srt = 45, adj = 1, xpd = TRUE, cex = 0.7)
Sys.sleep(0.5 * t)
for (i in 1:length(d)) {
Sys.sleep(0.4 * t)
points(d[i], rr[i], col = "gray", pch = 19)
}
Sys.sleep(1.5 * t)
myvfont <- c("serif", "bold")
text(mean(d), 1.22, labels = "Xmas  model",
col = "blue", xpd = TRUE, cex = 1.4, vfont = myvfont)
Sys.sleep(1.5 * t)
sels <- list(c("12-23", "12-24", "12-25", "12-26", "12-27"),
c("12-30", "12-31", "01-01", "01-02"), c("01-05", "01-06",
"01-07"))
for (i in 1:length(sels)) {
sel <- dm %in% sels[[i]]
d2 <- d[sel]
rr2 <- rr[sel]
rr2[rr2 < 1] <- 1
polygon(d2, rr2, border = NULL, col = "forestgreen")
Sys.sleep(t)
}
sel0 <- dm %in% c("12-24", "12-25", "12-26", "12-31", "01-01",
"01-06")
d0 <- d[sel0]
rr0 <- rr[sel0]
for (i in 1:length(sel0)) {
points(d0[i], rr0[i], pch = 19, col = "red", cex = 3)
Sys.sleep(0.4 * t)
}
for (i in 1:2) {
fac <- runif(n = length(d0), min = 0.1, max = 0.9)
points(d0, fac * (rr0 - 1) + 1, pch = 8, cex = 1.2 +
(i - 1) * 0.6, col = "white")
}
Sys.sleep(2 * t)
y <- 1.17
messaux <- paste("Merry Xmas ALE!!")
text(x = as.Date(paste(year - 1, "12-28", sep = "-")), y = y,
labels = messaux, vfont = myvfont, cex = 2.5, col = "red")
}
# Please run two times!!!!!!
xmasregression(time = 5)
shiny::runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('/Volumes/PHILIPS UFD/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
runApp('Desktop/biomonitoR_app/biomonitoR_app')
