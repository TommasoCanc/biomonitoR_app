install.packages("sf")
install.packages("rgdal")
install.packages("raster")
library(sf) # <- GIS
library(rgdal) # <- GIS
library(raster) # <- GIS
t_min <- list.files(path = "/Volumes/GoogleDrive/Il mio Drive/Simone_SDM/Climate_Variables/tmin/",
pattern = '.tif$', all.files = TRUE, full.names = TRUE)
t_max <- list.files(path = "/Volumes/GoogleDrive/Il mio Drive/Simone_SDM/Climate_Variables/tmax/",
pattern = '.tif$', all.files = TRUE, full.names = TRUE)
prec <- list.files(path = "/Volumes/GoogleDrive/Il mio Drive/Simone_SDM/Climate_Variables/prec/",
pattern = '.tif$', all.files = TRUE, full.names = TRUE)
elev <- raster("/Volumes/GoogleDrive/Il mio Drive/Simone_SDM/Climate_Variables/wc2.1_30s_elev.tif")
plot(elev)
t_min.stack <- stack(t_min)
t_max.stack <- stack(t_max)
prec.stack <- stack(prec)
par(mfrow=c(1,2), mar=c(1,1,1,1), oma=c(3,3,4,3))
plot(t_min.stack[[1]])
plot(t_max.stack[[1]])
t_max.stack
t_max.stack <- stack(t_max)
plot(t_max.stack[[1]])
plot(t_min.stack[[1]])
plot(t_max.stack[[1]])
dev.off()
rm(t_min, t_max, prec)
install.packages("red")
library(sf) # <- GIS
library(rgeos) # <- GIS
library(raster) # <- GIS
library(adehabitatHR) # <- Home range estimation
library(red) # <- AOO
library(red) # <- AOO
library(red)
install.packages("rgl")
library(red)
install.packages("rgl")
install.packages("red")
library(red)
library(rgl)
library(rgeos) # <- GIS
library(raster) # <- GIS
setwd("/Volumes/GoogleDrive/Il mio Drive/Simone_SDM")
# WE NOT Remove old records -----------------------------------------------------------
d.haemo <- read.csv("./Occurrences/d.haemo.csv", sep = ",")
# WE NOT Remove old records ----------------------------------------------------
d.haemo <- read.csv("./Occurrences/d.haemo.csv", sep = ",")
bioclim <- list.files(path = "./Raster variables/Climate_variables/Current/Crop/bioclim_crop/",
pattern = ".tif$", all.files = TRUE, full.names = TRUE)
envirem <- list.files(path = "./Raster variables/Climate_variables/Current/Crop/envirem_crop/",
pattern = ".tif$", all.files = TRUE, full.names = TRUE)
elevation <-  raster("./Raster variables/Climate_variables/Current/Crop/Elevation_Crop.tif")
# Check variable spatial resolution
xres(elevation); yres(elevation)
res.deg <- xres(elevation)
# 1 KM ########
# Number of null cell that we want to use to reduce spatial correlation
# celdas.vacias <- 1
empty.cell <- 1
minimum.dist <- res.deg * empty.cell
#In km ~ 1 km
minimum.dist * 111.19
sp.spatial.cor <- as.data.frame(d.haemo[,c("decimalLongitude","decimalLatitude")])
colnames(sp.spatial.cor) <- c("x","y")
xy.thin <- SDMworkshop::reduceSpatialCorrelation(
xy = sp.spatial.cor,
variables = elevation,
minimum.distance = minimum.dist)
res.deg
minimum.dist * 111.19
res.deg
library(shiny)
runGitHub("biomonitoR_app", username = getOption("TommasoCanc"), ref = "biomonitoR_app",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
runGitHub("TommasoCanc", username = getOption("biomonitoR_app"))
runGitHub("biomonitoR_app", username = getOption("TommasoCanc"))
runGitHub("biomonitoR_app", username = getOption("TommasoCanc"), ref = "master",
subdir = "biomonitoR_app")
runGitHub(repo, username = getOption("github.user"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
runGitHub("shiny_example", "rstudio")
runUrl('https://github.com/rstudio/shiny_example/archive/master.tar.gz')
runUrl('https://github.com/TommasoCanc/biomonitoR_app/tree/main/biomonitoR_app')
shiny::runGitHub('shiny_example', 'rstudio')
runGitHub("shiny_example", "rstudio", subdir = "inst/shinyapp/")
runGitHub('biomonitoR_app','TommasoCanc', ref="main", subdir = "biomonitoR_app")
runApp('~/Desktop/biomonitoR_app/biomonitoR_app')
